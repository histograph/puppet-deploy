#*****************************************************************
# Neo4j configuration: Managed by Puppet
#*****************************************************************

# The name of the database to mount
#dbms.active_database=<%= scope['neo4j::dbms_active_database'] %>

# Paths of directories in the installation.
dbms.directories.data=<%= scope['neo4j::dbms_directories_data'] %>
dbms.directories.plugins=<%= scope['neo4j::dbms_directories_plugins'] %>
dbms.directories.certificates=<%= scope['neo4j::dbms_directories_certificates'] %>
dbms.directories.logs=<%= scope['neo4j::dbms_directories_logs'] %>
dbms.directories.run=<%= scope['neo4j::dbms_directories_run'] %>
dbms.directories.lib=<%= scope['neo4j::dbms_directories_lib'] %>

<% if scope['neo4j::allow_load_csv'] -%>

# This setting constrains all `LOAD CSV` import files to be under the `import` directory. Remove or uncomment it to
# allow files to be loaded from anywhere in filesystem; this introduces possible security problems. See the `LOAD CSV`
# section of the manual for details.
dbms.directories.import=<%= scope['neo4j::dbms_directories_import']  %>
<% end -%>

# Whether requests to Neo4j are authenticated.
# To disable authentication, uncomment this line
dbms.security.auth_enabled=<%= scope['neo4j::dbms_security_auth_enabled'] -%>

# Enable this to be able to upgrade a store from an older version.
dbms.allow_upgrade=<%= scope['neo4j::dbms_allow_format_migration']  %>

# Java Heap Size: by default the Java heap size is dynamically
# calculated based on available system resources.
# Uncomment these lines to set specific initial and maximum
# heap size.
#dbms.memory.heap.initial_size=<%= scope['neo4j::dbms_memory_heap_initial_size']  %>
#dbms.memory.heap.max_size=<%= scope['neo4j::dbms_memory_heap_max_size']  %>

# The amount of memory to use for mapping the store files, in bytes (or
# kilobytes with the 'k' suffix, megabytes with 'm' and gigabytes with 'g').
# If Neo4j is running on a dedicated server, then it is generally recommended
# to leave about 2-4 gigabytes for the operating system, give the JVM enough
# heap to hold all your transaction state and query context, and then leave the
# rest for the page cache.
# The default page cache memory assumes the machine is dedicated to running
# Neo4j, and is heuristically set to 50% of RAM minus the max Java heap size.
#dbms.memory.pagecache.size=<%= scope['neo4j::dbms_memory_pagecache_size']  %>
